{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\src\\\\components\\\\Timer\\\\TimerFunctionality.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TimerView from \"./TimerView\";\nimport Buttons from \"./Buttons\";\nimport { setTimes, setStatus, resetSubCycle, setMsg, setMinutes } from \"../../redux/slices/timer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { asynCall, studyTime, shortBreak, longBreak } from \"./ConfigAlert\";\nimport \"../../App.css\";\nimport { BackToStart } from \"./TimerController\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimerFunctionality() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    values: {\n      status,\n      msg\n    }\n  } = useSelector(state => state.timer); //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\n\n  const ConfigTimes = () => {\n    const {\n      studyTime,\n      shortBreak,\n      longBreak\n    } = asynCall();\n    console.log(studyTime); //setSubCycleCount(0);\n\n    dispatch(resetSubCycle()); //setMsg(\"Study Time\");\n\n    dispatch(setMsg(\"Study Time\")); //setStatus(1);\n\n    dispatch(setStatus(1));\n\n    if (status === 4) {\n      BackToStart();\n    }\n\n    dispatch(setMinutes(studyTime));\n    dispatch(setTimes({\n      studyTime: 0,\n      shortBreak: 0,\n      longBreak: 0\n    })); //setUserStudyTime(result.values.configStudyTime);\n    //setActualMinutes(result.values.configStudyTime);\n    //setUserShortBreak(result.values.configShortBreak);\n    //setUserLongBreak(result.values.configLongBreak);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerFunctionality\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"msg-text\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      ConfigTimes: ConfigTimes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimerFunctionality, \"obW953cCokOpKZhp4MFz5CXLwDg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TimerFunctionality;\nexport default TimerFunctionality;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerFunctionality\");","map":{"version":3,"names":["React","TimerView","Buttons","setTimes","setStatus","resetSubCycle","setMsg","setMinutes","useDispatch","useSelector","asynCall","studyTime","shortBreak","longBreak","BackToStart","TimerFunctionality","dispatch","values","status","msg","state","timer","ConfigTimes","console","log"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/TimerFunctionality.js"],"sourcesContent":["import React from \"react\";\r\nimport TimerView from \"./TimerView\";\r\nimport Buttons from \"./Buttons\";\r\nimport { setTimes, setStatus, resetSubCycle, setMsg, setMinutes} from \"../../redux/slices/timer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {asynCall,studyTime,shortBreak,longBreak} from \"./ConfigAlert\";\r\n\r\nimport \"../../App.css\";\r\nimport { BackToStart } from \"./TimerController\";\r\n\r\nfunction TimerFunctionality() {\r\n  const dispatch = useDispatch();\r\n  const { values: {status, msg} } = useSelector((state) => state.timer);\r\n\r\n\r\n  //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\r\n\r\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\r\n\r\n  const ConfigTimes = () => {\r\n    const { studyTime, shortBreak, longBreak } = asynCall();\r\n    console.log(studyTime)\r\n    \r\n    //setSubCycleCount(0);\r\n    dispatch(resetSubCycle());\r\n    //setMsg(\"Study Time\");\r\n    dispatch(setMsg(\"Study Time\"));\r\n    //setStatus(1);\r\n    dispatch(setStatus(1));\r\n\r\n    if (status === 4) {\r\n      BackToStart();\r\n    }\r\n\r\n    dispatch(setMinutes(studyTime));\r\n\r\n    dispatch(\r\n      setTimes({\r\n        studyTime: 0,\r\n        shortBreak: 0,\r\n        longBreak: 0,\r\n      })\r\n    );\r\n\r\n    //setUserStudyTime(result.values.configStudyTime);\r\n    //setActualMinutes(result.values.configStudyTime);\r\n    //setUserShortBreak(result.values.configShortBreak);\r\n    //setUserLongBreak(result.values.configLongBreak);\r\n  };\r\n\r\n  return (\r\n    <div className=\"timerFunctionality\">\r\n      <span className=\"msg-text\">{msg}</span>\r\n\r\n      <TimerView/>\r\n\r\n      <Buttons ConfigTimes={ConfigTimes} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerFunctionality;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,MAA7C,EAAqDC,UAArD,QAAsE,0BAAtE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,QAAR,EAAiBC,SAAjB,EAA2BC,UAA3B,EAAsCC,SAAtC,QAAsD,eAAtD;AAEA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,mBAA5B;;;AAEA,SAASC,kBAAT,GAA8B;EAAA;;EAC5B,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM;IAAES,MAAM,EAAE;MAACC,MAAD;MAASC;IAAT;EAAV,IAA4BV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA7C,CAF4B,CAK5B;EAEA;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAM;MAAEX,SAAF;MAAaC,UAAb;MAAyBC;IAAzB,IAAuCH,QAAQ,EAArD;IACAa,OAAO,CAACC,GAAR,CAAYb,SAAZ,EAFwB,CAIxB;;IACAK,QAAQ,CAACX,aAAa,EAAd,CAAR,CALwB,CAMxB;;IACAW,QAAQ,CAACV,MAAM,CAAC,YAAD,CAAP,CAAR,CAPwB,CAQxB;;IACAU,QAAQ,CAACZ,SAAS,CAAC,CAAD,CAAV,CAAR;;IAEA,IAAIc,MAAM,KAAK,CAAf,EAAkB;MAChBJ,WAAW;IACZ;;IAEDE,QAAQ,CAACT,UAAU,CAACI,SAAD,CAAX,CAAR;IAEAK,QAAQ,CACNb,QAAQ,CAAC;MACPQ,SAAS,EAAE,CADJ;MAEPC,UAAU,EAAE,CAFL;MAGPC,SAAS,EAAE;IAHJ,CAAD,CADF,CAAR,CAjBwB,CAyBxB;IACA;IACA;IACA;EACD,CA7BD;;EA+BA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4BM;IAA5B;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE,QAAC,OAAD;MAAS,WAAW,EAAEG;IAAtB;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAjDQP,kB;UACUP,W,EACiBC,W;;;KAF3BM,kB;AAmDT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}