{"ast":null,"code":"import Swal from \"sweetalert2\";\nlet studyTime;\nlet shortBreak;\nlet longBreak;\n\nconst setTimers = () => {\n  studyTime = prompt('Ingresa tiempo');\n  shortBreak = prompt('Ingresa tiempo');\n  longBreak = prompt('Ingresa tiempo');\n  console.log(studyTime + \" \" + shortBreak + \" \" + longBreak);\n  return studyTime + \" \" + shortBreak + \" \" + longBreak;\n}; // const configAlert = () =>{\n//     return new Promise(resolve =>{\n//         resolve(setTimes());\n//     });\n// }\n// async function asynCall(){\n// console.log('entrando');\n// const obj = await configAlert();\n// }\n\n\nexport { studyTime, shortBreak, longBreak, setTimers }; //         Swal.fire({\n//         title: \"Timer Configuration\",\n//         html: `<input type=\"number\" id=\"study-time\" class=\"study-time\" min=\"0\" max=\"60\" placeholder=\"Study Time\"><br>\n//        <input type=\"number\" id=\"short-break\" class=\"short-break\" min=\"0\" max=\"60\" placeholder=\"Short Break Time\"><br>\n//        <input type=\"number\" id=\"long-break\" class=\"long-break\" min=\"0\" max=\"60\" placeholder=\"Long Break Time\">`,\n//         confirmButtonText: \"Confirm\",\n//         allowOutsideClick: false,\n//         allowEscapeKey: false,\n//         focusConfirm: false,\n//         preConfirm: () => {\n//           const configStudyTime =\n//             Swal.getPopup().querySelector(\"#study-time\").value;\n//           const configShortBreak =\n//             Swal.getPopup().querySelector(\"#short-break\").value;\n//           const configLongBreak =\n//             Swal.getPopup().querySelector(\"#long-break\").value;\n//           if (!configStudyTime || !configShortBreak || !configLongBreak) {\n//             Swal.showValidationMessage(`Please configure the timer`);\n//           }\n//           return {\n//             configStudyTime: configStudyTime,\n//             configShortBreak: configShortBreak,\n//             configLongBreak: configLongBreak,\n//           };\n//         },\n//       }).then((result) => {\n//         Swal.fire({\n//           confirmButtonText: \"Ok\",\n//           allowOutsideClick: false,\n//           allowEscapeKey: false,\n//           focusConfirm: false,\n//           title: `Study Time: ${result.value.configStudyTime} minutes\n//             Short Break Time: ${result.value.configShortBreak} minutes\n//             Long Break Time: ${result.value.configLongBreak} minutes`.trim(),\n//         });\n//         return {\n//             studyTime: result.value.configStudyTime,\n//             shortBreak: result.value.configShortBreak,\n//             longBreak: result.value.configLongBreak\n//         }\n//     });\n// }","map":{"version":3,"names":["Swal","studyTime","shortBreak","longBreak","setTimers","prompt","console","log"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/ConfigAlert.js"],"sourcesContent":["import Swal from \"sweetalert2\";\r\n\r\nlet studyTime;\r\nlet shortBreak;\r\nlet longBreak;\r\n\r\nconst setTimers = () =>{\r\n    studyTime = prompt('Ingresa tiempo')\r\n    shortBreak = prompt('Ingresa tiempo')\r\n    longBreak = prompt('Ingresa tiempo')\r\n    console.log(studyTime + \" \" + shortBreak + \" \" + longBreak)\r\n    return studyTime + \" \" + shortBreak + \" \" + longBreak\r\n}\r\n\r\n// const configAlert = () =>{\r\n//     return new Promise(resolve =>{\r\n//         resolve(setTimes());\r\n//     });\r\n// }\r\n\r\n// async function asynCall(){\r\n// console.log('entrando');\r\n// const obj = await configAlert();\r\n// }\r\n\r\n\r\nexport {studyTime, shortBreak, longBreak, setTimers};\r\n\r\n\r\n//         Swal.fire({\r\n//         title: \"Timer Configuration\",\r\n//         html: `<input type=\"number\" id=\"study-time\" class=\"study-time\" min=\"0\" max=\"60\" placeholder=\"Study Time\"><br>\r\n//        <input type=\"number\" id=\"short-break\" class=\"short-break\" min=\"0\" max=\"60\" placeholder=\"Short Break Time\"><br>\r\n//        <input type=\"number\" id=\"long-break\" class=\"long-break\" min=\"0\" max=\"60\" placeholder=\"Long Break Time\">`,\r\n//         confirmButtonText: \"Confirm\",\r\n//         allowOutsideClick: false,\r\n//         allowEscapeKey: false,\r\n//         focusConfirm: false,\r\n//         preConfirm: () => {\r\n//           const configStudyTime =\r\n//             Swal.getPopup().querySelector(\"#study-time\").value;\r\n//           const configShortBreak =\r\n//             Swal.getPopup().querySelector(\"#short-break\").value;\r\n//           const configLongBreak =\r\n//             Swal.getPopup().querySelector(\"#long-break\").value;\r\n//           if (!configStudyTime || !configShortBreak || !configLongBreak) {\r\n//             Swal.showValidationMessage(`Please configure the timer`);\r\n//           }\r\n//           return {\r\n//             configStudyTime: configStudyTime,\r\n//             configShortBreak: configShortBreak,\r\n//             configLongBreak: configLongBreak,\r\n//           };\r\n//         },\r\n//       }).then((result) => {\r\n//         Swal.fire({\r\n//           confirmButtonText: \"Ok\",\r\n//           allowOutsideClick: false,\r\n//           allowEscapeKey: false,\r\n//           focusConfirm: false,\r\n//           title: `Study Time: ${result.value.configStudyTime} minutes\r\n//             Short Break Time: ${result.value.configShortBreak} minutes\r\n//             Long Break Time: ${result.value.configLongBreak} minutes`.trim(),\r\n//         });\r\n//         return {\r\n//             studyTime: result.value.configStudyTime,\r\n//             shortBreak: result.value.configShortBreak,\r\n//             longBreak: result.value.configLongBreak\r\n//         }\r\n//     });\r\n// }\r\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,IAAIC,SAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,SAAJ;;AAEA,MAAMC,SAAS,GAAG,MAAK;EACnBH,SAAS,GAAGI,MAAM,CAAC,gBAAD,CAAlB;EACAH,UAAU,GAAGG,MAAM,CAAC,gBAAD,CAAnB;EACAF,SAAS,GAAGE,MAAM,CAAC,gBAAD,CAAlB;EACAC,OAAO,CAACC,GAAR,CAAYN,SAAS,GAAG,GAAZ,GAAkBC,UAAlB,GAA+B,GAA/B,GAAqCC,SAAjD;EACA,OAAOF,SAAS,GAAG,GAAZ,GAAkBC,UAAlB,GAA+B,GAA/B,GAAqCC,SAA5C;AACH,CAND,C,CAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,SAAQF,SAAR,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,SAA1C,G,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}