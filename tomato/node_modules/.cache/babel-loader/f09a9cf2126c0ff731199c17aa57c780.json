{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Bruno\\\\github\\\\poss2\\\\poss\\\\tomato\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss2\\\\poss\\\\tomato\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pomodoro from './components/Pomodoro';\nimport StartButton from './components/StartButton'; //import ResetButton from './components/ResetButton'\n\nimport './App.css';\n\nfunction App() {\n  var initialMinutes = 25;\n  var initialSeconds = 0;\n  var flag = false;\n\n  var _useState = useState(initialMinutes),\n      _useState2 = _slicedToArray(_useState, 2),\n      minutes = _useState2[0],\n      setMinutes = _useState2[1];\n\n  var _useState3 = useState(initialSeconds),\n      _useState4 = _slicedToArray(_useState3, 2),\n      seconds = _useState4[0],\n      setSeconds = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayMessage = _useState6[0],\n      setDisplayMessage = _useState6[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          var _minutes = displayMessage ? 24 : 4;\n\n          var _seconds = 59;\n          setSeconds(_seconds);\n          setMinutes(_minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n  var timerMinutes = minutes < 10 ? \"0\".concat(minutes) : minutes;\n  var timerSeconds = seconds < 10 ? \"0\".concat(seconds) : seconds;\n\n  function onToggleReset() {\n    setMinutes(initialMinutes);\n    setSeconds(initialSeconds);\n    flag = !flag;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, displayMessage && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }\n  }, \"Break time! New session starts in:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, timerMinutes, \":\", timerSeconds), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: onToggleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StartButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","Pomodoro","StartButton","App","initialMinutes","initialSeconds","flag","useState","minutes","setMinutes","seconds","setSeconds","displayMessage","setDisplayMessage","useEffect","interval","setInterval","clearInterval","timerMinutes","timerSeconds","onToggleReset"],"sources":["C:/Users/Bruno/github/poss2/poss/tomato/src/App.js"],"sourcesContent":["import React from 'react'\r\nimport Pomodoro from './components/Pomodoro'\r\nimport StartButton from './components/StartButton'\r\n//import ResetButton from './components/ResetButton'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  let initialMinutes = 25;\r\n  let initialSeconds = 0;\r\n  let flag = false;\r\n\r\n  const[minutes, setMinutes] = useState(initialMinutes);\r\n  const[seconds, setSeconds] = useState(initialSeconds);\r\n  const[displayMessage, setDisplayMessage] = useState(false);\r\n\r\n  useEffect(() =>{\r\n      let interval = setInterval(() => {\r\n          clearInterval(interval);\r\n\r\n          if(seconds === 0){\r\n              if(minutes !== 0){\r\n                  setSeconds(59);\r\n                  setMinutes(minutes-1);\r\n              } else {\r\n                  let minutes = displayMessage ? 24 : 4;\r\n                  let seconds = 59;\r\n\r\n                  setSeconds(seconds);\r\n                  setMinutes(minutes);\r\n                  setDisplayMessage(!displayMessage);\r\n              }\r\n          } else {\r\n              setSeconds(seconds - 1);\r\n          }\r\n          \r\n      }, 1000)\r\n  }, [seconds]);\r\n\r\n  const timerMinutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n  const timerSeconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n\r\n  function onToggleReset (){\r\n      setMinutes(initialMinutes);\r\n      setSeconds(initialSeconds);\r\n      flag = !flag;\r\n  }\r\n\r\nreturn (\r\n  <Fragment>\r\n      <div className='message'>\r\n          {displayMessage && <div>Break time! New session starts in:</div>}\r\n      </div>\r\n      <div className='timer'>\r\n          {timerMinutes}:{timerSeconds}\r\n      </div>\r\n      <Button variant=\"contained\" onClick={onToggleReset}>Reset</Button>\r\n  </Fragment>\r\n)\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Pomodoro />\r\n      <StartButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EAEb,IAAIC,cAAc,GAAG,EAArB;EACA,IAAIC,cAAc,GAAG,CAArB;EACA,IAAIC,IAAI,GAAG,KAAX;;EAJa,gBAMgBC,QAAQ,CAACH,cAAD,CANxB;EAAA;EAAA,IAMPI,OANO;EAAA,IAMEC,UANF;;EAAA,iBAOgBF,QAAQ,CAACF,cAAD,CAPxB;EAAA;EAAA,IAOPK,OAPO;EAAA,IAOEC,UAPF;;EAAA,iBAQ8BJ,QAAQ,CAAC,KAAD,CARtC;EAAA;EAAA,IAQPK,cARO;EAAA,IAQSC,iBART;;EAUbC,SAAS,CAAC,YAAK;IACX,IAAIC,QAAQ,GAAGC,WAAW,CAAC,YAAM;MAC7BC,aAAa,CAACF,QAAD,CAAb;;MAEA,IAAGL,OAAO,KAAK,CAAf,EAAiB;QACb,IAAGF,OAAO,KAAK,CAAf,EAAiB;UACbG,UAAU,CAAC,EAAD,CAAV;UACAF,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;QACH,CAHD,MAGO;UACH,IAAIA,QAAO,GAAGI,cAAc,GAAG,EAAH,GAAQ,CAApC;;UACA,IAAIF,QAAO,GAAG,EAAd;UAEAC,UAAU,CAACD,QAAD,CAAV;UACAD,UAAU,CAACD,QAAD,CAAV;UACAK,iBAAiB,CAAC,CAACD,cAAF,CAAjB;QACH;MACJ,CAZD,MAYO;QACHD,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;MACH;IAEJ,CAnByB,EAmBvB,IAnBuB,CAA1B;EAoBH,CArBQ,EAqBN,CAACA,OAAD,CArBM,CAAT;EAuBA,IAAMQ,YAAY,GAAIV,OAAO,GAAG,EAAX,cAAqBA,OAArB,IAAiCA,OAAtD;EACA,IAAMW,YAAY,GAAIT,OAAO,GAAG,EAAX,cAAqBA,OAArB,IAAiCA,OAAtD;;EAEA,SAASU,aAAT,GAAyB;IACrBX,UAAU,CAACL,cAAD,CAAV;IACAO,UAAU,CAACN,cAAD,CAAV;IACAC,IAAI,GAAG,CAACA,IAAR;EACH;;EAEH,oBACE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKM,cAAc,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wCADvB,CADJ,eAII;IAAK,SAAS,EAAC,OAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKM,YADL,OACoBC,YADpB,CAJJ,eAOI,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,OAAO,EAAEC,aAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAPJ,CADF;EAaE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF;AAMD;;AAED,eAAejB,GAAf"},"metadata":{},"sourceType":"module"}