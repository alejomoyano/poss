{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { getApp } from 'firebase/app';\nimport { getFirestore, collection, onSnapshot } from \"firebase/firestore\";\nconst initialState = {\n  values: {},\n  error: null\n};\nexport const timerSlice = createSlice({\n  name: 'timer',\n  initialState,\n  reducers: {\n    setTimes: (state, action) => {\n      console.log('entre');\n      state.values = action.payload;\n    },\n    setStatus: (state, action) => {\n      state.values.times.status = action.payload;\n    },\n    incrementSubCycle: state => {\n      state.values.subCycle++;\n    },\n    incrementCycle: state => {\n      state.values.cycle++;\n    },\n    setSubCycle: state => {\n      state.values.subCycle = 0;\n    }\n  }\n});\nexport const {\n  setTimes,\n  setStatus,\n  incrementCycle,\n  incrementSubCycle\n} = timerSlice.actions;\nexport default timerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","useDispatch","getApp","getFirestore","collection","onSnapshot","initialState","values","error","timerSlice","name","reducers","setTimes","state","action","console","log","payload","setStatus","times","status","incrementSubCycle","subCycle","incrementCycle","cycle","setSubCycle","actions","reducer"],"sources":["C:/Users/Bruno/github/poss/tomato/src/redux/slices/timer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApp } from 'firebase/app';\r\nimport { getFirestore, collection, onSnapshot } from \"firebase/firestore\";\r\n\r\nconst initialState = {\r\n    values: {},\r\n    error: null,\r\n};\r\n\r\n\r\nexport const timerSlice = createSlice({\r\n    name: 'timer',\r\n    initialState,\r\n    reducers: {\r\n        setTimes: (state, action) => {\r\n            console.log('entre');\r\n            state.values = action.payload;\r\n        },\r\n        setStatus: (state, action) => {\r\n            state.values.times.status = action.payload;\r\n        },\r\n        incrementSubCycle: (state) => {\r\n            state.values.subCycle++;\r\n        },\r\n        incrementCycle: (state) => {\r\n            state.values.cycle++;\r\n        },\r\n        setSubCycle: (state) => {\r\n            state.values.subCycle = 0;\r\n        }\r\n    },\r\n})\r\n\r\nexport const {setTimes, setStatus, incrementCycle, incrementSubCycle} = timerSlice.actions;\r\nexport default timerSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,oBAArD;AAEA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EADS;EAEjBC,KAAK,EAAE;AAFU,CAArB;AAMA,OAAO,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAClCW,IAAI,EAAE,OAD4B;EAElCJ,YAFkC;EAGlCK,QAAQ,EAAE;IACNC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzBC,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAH,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACG,OAAtB;IACH,CAJK;IAKNC,SAAS,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACN,MAAN,CAAaY,KAAb,CAAmBC,MAAnB,GAA4BN,MAAM,CAACG,OAAnC;IACH,CAPK;IAQNI,iBAAiB,EAAGR,KAAD,IAAW;MAC1BA,KAAK,CAACN,MAAN,CAAae,QAAb;IACH,CAVK;IAWNC,cAAc,EAAGV,KAAD,IAAW;MACvBA,KAAK,CAACN,MAAN,CAAaiB,KAAb;IACH,CAbK;IAcNC,WAAW,EAAGZ,KAAD,IAAW;MACpBA,KAAK,CAACN,MAAN,CAAae,QAAb,GAAwB,CAAxB;IACH;EAhBK;AAHwB,CAAD,CAA9B;AAuBP,OAAO,MAAM;EAACV,QAAD;EAAWM,SAAX;EAAsBK,cAAtB;EAAsCF;AAAtC,IAA2DZ,UAAU,CAACiB,OAA5E;AACP,eAAejB,UAAU,CAACkB,OAA1B"},"metadata":{},"sourceType":"module"}