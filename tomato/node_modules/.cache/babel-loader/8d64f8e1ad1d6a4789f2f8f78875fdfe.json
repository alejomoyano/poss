{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\src\\\\components\\\\Timer\\\\TimerFunctionality.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TimerView from \"./TimerView\";\nimport Buttons from \"./Buttons\";\nimport { setTimes, setStatus, resetSubCycle } from '../../redux/slices/timer';\nimport { useDispatch } from 'react-redux';\nimport configAlert from \"./ConfigAlert\";\nimport \"../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimerFunctionality() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [subCycleCount, setSubCycleCount] = useState(0);\n  const [cycleCount, setCycleCount] = useState(0);\n  const dispatch = useDispatch(); //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\n\n  const configTimes = () => {\n    _s();\n\n    const {\n      studyTime,\n      shortBreak,\n      longBreak\n    } = configAlert();\n    const {\n      value: status\n    } = useSelector(state => state.timer); //setSubCycleCount(0);\n\n    dispatch(resetSubCycle()); //setMsg(\"Study Time\");\n\n    dispatch(setMsg('Study Time')); //setStatus(1);\n\n    dispatch(setStatus(1));\n\n    if (status === 4) {\n      backToStart();\n    }\n\n    const times = {\n      studyTime: studyTime,\n      shortBreak: shortBreak,\n      longBreak: longBreak\n    };\n    console.log(times);\n    dispatch(setTimes({\n      times\n    })); //setUserStudyTime(result.value.configStudyTime);\n    //setActualMinutes(result.value.configStudyTime);\n    //setUserShortBreak(result.value.configShortBreak);\n    //setUserLongBreak(result.value.configLongBreak);\n  };\n\n  _s(configTimes, \"J2FoYAVA4nw0gWJKdTqCt8TxM+M=\", true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerFunctionality\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"msg-text\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerView, {\n      subCycleCount: subCycleCount,\n      cycleCount: cycleCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      configTimes: configTimes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TimerFunctionality, \"FOiiVcVlclEt+WyH0zL9A9Ab3UE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TimerFunctionality;\nexport default TimerFunctionality;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerFunctionality\");","map":{"version":3,"names":["React","useState","TimerView","Buttons","setTimes","setStatus","resetSubCycle","useDispatch","configAlert","TimerFunctionality","subCycleCount","setSubCycleCount","cycleCount","setCycleCount","dispatch","configTimes","studyTime","shortBreak","longBreak","value","status","useSelector","state","timer","setMsg","backToStart","times","console","log","msg"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/TimerFunctionality.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TimerView from \"./TimerView\";\r\nimport Buttons from \"./Buttons\";\r\nimport {setTimes, setStatus, resetSubCycle} from '../../redux/slices/timer'\r\nimport {useDispatch} from 'react-redux'\r\nimport configAlert from \"./ConfigAlert\";\r\nimport \"../../App.css\";\r\n\r\nfunction TimerFunctionality() {\r\n\r\n  const [subCycleCount, setSubCycleCount] = useState(0);\r\n  const [cycleCount, setCycleCount] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\r\n\r\n\r\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\r\n\r\n  const configTimes = () => {\r\n    const { studyTime, shortBreak, longBreak } = configAlert();\r\n    const {value: status} = useSelector(state => state.timer);\r\n      //setSubCycleCount(0);\r\n      dispatch(resetSubCycle());\r\n      //setMsg(\"Study Time\");\r\n      dispatch(setMsg('Study Time'));\r\n      //setStatus(1);\r\n      dispatch(setStatus(1));\r\n      if (status === 4) {\r\n        backToStart();\r\n      }\r\n      const times = {\r\n        studyTime: studyTime,\r\n        shortBreak: shortBreak,\r\n        longBreak: longBreak\r\n      };\r\n\r\n      console.log(times);\r\n      dispatch(setTimes({times}));\r\n\r\n      //setUserStudyTime(result.value.configStudyTime);\r\n      //setActualMinutes(result.value.configStudyTime);\r\n      //setUserShortBreak(result.value.configShortBreak);\r\n      //setUserLongBreak(result.value.configLongBreak);\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"timerFunctionality\">\r\n\r\n      <span className=\"msg-text\">{msg}</span>\r\n\r\n      <TimerView \r\n      subCycleCount={subCycleCount}\r\n      cycleCount={cycleCount}\r\n      />\r\n\r\n      <Buttons\r\n        configTimes={configTimes}\r\n         />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerFunctionality;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,aAA7B,QAAiD,0BAAjD;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,eAAP;;;AAEA,SAASC,kBAAT,GAA8B;EAAA;;EAAA;;EAE5B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,CAAD,CAAlD;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;EAEA,MAAMa,QAAQ,GAAGP,WAAW,EAA5B,CAL4B,CAO5B;EAGA;;EAEA,MAAMQ,WAAW,GAAG,MAAM;IAAA;;IACxB,MAAM;MAAEC,SAAF;MAAaC,UAAb;MAAyBC;IAAzB,IAAuCV,WAAW,EAAxD;IACA,MAAM;MAACW,KAAK,EAAEC;IAAR,IAAkBC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAnC,CAFwB,CAGtB;;IACAT,QAAQ,CAACR,aAAa,EAAd,CAAR,CAJsB,CAKtB;;IACAQ,QAAQ,CAACU,MAAM,CAAC,YAAD,CAAP,CAAR,CANsB,CAOtB;;IACAV,QAAQ,CAACT,SAAS,CAAC,CAAD,CAAV,CAAR;;IACA,IAAIe,MAAM,KAAK,CAAf,EAAkB;MAChBK,WAAW;IACZ;;IACD,MAAMC,KAAK,GAAG;MACZV,SAAS,EAAEA,SADC;MAEZC,UAAU,EAAEA,UAFA;MAGZC,SAAS,EAAEA;IAHC,CAAd;IAMAS,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACAZ,QAAQ,CAACV,QAAQ,CAAC;MAACsB;IAAD,CAAD,CAAT,CAAR,CAnBsB,CAqBtB;IACA;IACA;IACA;EAEH,CA1BD;;EAZ4B,GAYtBX,WAZsB;;EAyC5B,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBAEE;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4Bc;IAA5B;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,SAAD;MACA,aAAa,EAAEnB,aADf;MAEA,UAAU,EAAEE;IAFZ;MAAA;MAAA;MAAA;IAAA,QAJF,eASE,QAAC,OAAD;MACE,WAAW,EAAEG;IADf;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;IAxDQN,kB;UAKUF,W;;;KALVE,kB;AA0DT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}