{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BackToStart } from \"./TimerController\";\nlet studyTime;\nlet shortBreak;\nlet longBreak;\n\nconst setTimes = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    values: {\n      status,\n      msg\n    }\n  } = useSelector(state => state.timer);\n  studyTime = prompt('Ingresa tiempo');\n  shortBreak = prompt('Ingresa tiempo');\n  longBreak = prompt('Ingresa tiempo');\n  dispatch(resetSubCycle()); //setMsg(\"Study Time\");\n\n  dispatch(setMsg(\"Study Time\")); //setStatus(1);\n\n  dispatch(setStatus(1));\n\n  if (status === 4) {\n    BackToStart();\n  }\n\n  dispatch(setMinutes(studyTime));\n  dispatch(setTimes({\n    studyTime: studyTime,\n    shortBreak: shortBreak,\n    longBreak: longBreak\n  }));\n}; //         Swal.fire({\n//         title: \"Timer Configuration\",\n//         html: `<input type=\"number\" id=\"study-time\" class=\"study-time\" min=\"0\" max=\"60\" placeholder=\"Study Time\"><br>\n//        <input type=\"number\" id=\"short-break\" class=\"short-break\" min=\"0\" max=\"60\" placeholder=\"Short Break Time\"><br>\n//        <input type=\"number\" id=\"long-break\" class=\"long-break\" min=\"0\" max=\"60\" placeholder=\"Long Break Time\">`,\n//         confirmButtonText: \"Confirm\",\n//         allowOutsideClick: false,\n//         allowEscapeKey: false,\n//         focusConfirm: false,\n//         preConfirm: () => {\n//           const configStudyTime =\n//             Swal.getPopup().querySelector(\"#study-time\").value;\n//           const configShortBreak =\n//             Swal.getPopup().querySelector(\"#short-break\").value;\n//           const configLongBreak =\n//             Swal.getPopup().querySelector(\"#long-break\").value;\n//           if (!configStudyTime || !configShortBreak || !configLongBreak) {\n//             Swal.showValidationMessage(`Please configure the timer`);\n//           }\n//           return {\n//             configStudyTime: configStudyTime,\n//             configShortBreak: configShortBreak,\n//             configLongBreak: configLongBreak,\n//           };\n//         },\n//       }).then((result) => {\n//         Swal.fire({\n//           confirmButtonText: \"Ok\",\n//           allowOutsideClick: false,\n//           allowEscapeKey: false,\n//           focusConfirm: false,\n//           title: `Study Time: ${result.value.configStudyTime} minutes\n//             Short Break Time: ${result.value.configShortBreak} minutes\n//             Long Break Time: ${result.value.configLongBreak} minutes`.trim(),\n//         });\n//         return {\n//             studyTime: result.value.configStudyTime,\n//             shortBreak: result.value.configShortBreak,\n//             longBreak: result.value.configLongBreak\n//         }\n//     });\n// }\n\n\n_s(setTimes, \"PbRk4P+kD2xyN7wC7MYkhebpyxE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nconst configAlert = () => {\n  return new Promise(resolve => {\n    resolve(setTimes());\n  });\n};\n\nasync function asynCall() {\n  console.log('entrando');\n  const obj = await configAlert();\n  console.log(studyTime + \" \" + shortBreak + \" \" + longBreak);\n}\n\nexport { configAlert, asynCall, studyTime, shortBreak, longBreak };","map":{"version":3,"names":["Swal","useDispatch","useSelector","BackToStart","studyTime","shortBreak","longBreak","setTimes","dispatch","values","status","msg","state","timer","prompt","resetSubCycle","setMsg","setStatus","setMinutes","configAlert","Promise","resolve","asynCall","console","log","obj"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/ConfigAlert.js"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BackToStart } from \"./TimerController\";\r\n\r\nlet studyTime;\r\nlet shortBreak;\r\nlet longBreak;\r\n\r\nconst setTimes = () =>{\r\n    const dispatch = useDispatch();\r\n    const {\r\n      values: { status, msg },\r\n    } = useSelector((state) => state.timer);\r\n    studyTime = prompt('Ingresa tiempo')\r\n    shortBreak = prompt('Ingresa tiempo')\r\n    longBreak = prompt('Ingresa tiempo')\r\n    dispatch(resetSubCycle());\r\n    //setMsg(\"Study Time\");\r\n    dispatch(setMsg(\"Study Time\"));\r\n    //setStatus(1);\r\n    dispatch(setStatus(1));\r\n\r\n    if (status === 4) {\r\n      BackToStart();\r\n    }\r\n\r\n    dispatch(setMinutes(studyTime));\r\n\r\n    dispatch(\r\n      setTimes({\r\n        studyTime: studyTime,\r\n        shortBreak: shortBreak,\r\n        longBreak: longBreak,\r\n      })\r\n    );\r\n    }\r\n    \r\n//         Swal.fire({\r\n//         title: \"Timer Configuration\",\r\n//         html: `<input type=\"number\" id=\"study-time\" class=\"study-time\" min=\"0\" max=\"60\" placeholder=\"Study Time\"><br>\r\n//        <input type=\"number\" id=\"short-break\" class=\"short-break\" min=\"0\" max=\"60\" placeholder=\"Short Break Time\"><br>\r\n//        <input type=\"number\" id=\"long-break\" class=\"long-break\" min=\"0\" max=\"60\" placeholder=\"Long Break Time\">`,\r\n//         confirmButtonText: \"Confirm\",\r\n//         allowOutsideClick: false,\r\n//         allowEscapeKey: false,\r\n//         focusConfirm: false,\r\n//         preConfirm: () => {\r\n//           const configStudyTime =\r\n//             Swal.getPopup().querySelector(\"#study-time\").value;\r\n//           const configShortBreak =\r\n//             Swal.getPopup().querySelector(\"#short-break\").value;\r\n//           const configLongBreak =\r\n//             Swal.getPopup().querySelector(\"#long-break\").value;\r\n//           if (!configStudyTime || !configShortBreak || !configLongBreak) {\r\n//             Swal.showValidationMessage(`Please configure the timer`);\r\n//           }\r\n//           return {\r\n//             configStudyTime: configStudyTime,\r\n//             configShortBreak: configShortBreak,\r\n//             configLongBreak: configLongBreak,\r\n//           };\r\n//         },\r\n//       }).then((result) => {\r\n//         Swal.fire({\r\n//           confirmButtonText: \"Ok\",\r\n//           allowOutsideClick: false,\r\n//           allowEscapeKey: false,\r\n//           focusConfirm: false,\r\n//           title: `Study Time: ${result.value.configStudyTime} minutes\r\n//             Short Break Time: ${result.value.configShortBreak} minutes\r\n//             Long Break Time: ${result.value.configLongBreak} minutes`.trim(),\r\n//         });\r\n//         return {\r\n//             studyTime: result.value.configStudyTime,\r\n//             shortBreak: result.value.configShortBreak,\r\n//             longBreak: result.value.configLongBreak\r\n//         }\r\n//     });\r\n// }\r\n\r\n\r\nconst configAlert = () =>{\r\n    return new Promise(resolve =>{\r\n            resolve(setTimes());\r\n    });\r\n}\r\n\r\nasync function asynCall(){\r\n    console.log('entrando');\r\n    const obj = await configAlert();\r\n    console.log(studyTime + \" \" + shortBreak + \" \" + longBreak)\r\n    \r\n}\r\n\r\n\r\nexport {configAlert,asynCall,studyTime, shortBreak,  longBreak};\r\n"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,IAAIC,SAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,SAAJ;;AAEA,MAAMC,QAAQ,GAAG,MAAK;EAAA;;EAClB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM;IACJQ,MAAM,EAAE;MAAEC,MAAF;MAAUC;IAAV;EADJ,IAEFT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAFf;EAGAT,SAAS,GAAGU,MAAM,CAAC,gBAAD,CAAlB;EACAT,UAAU,GAAGS,MAAM,CAAC,gBAAD,CAAnB;EACAR,SAAS,GAAGQ,MAAM,CAAC,gBAAD,CAAlB;EACAN,QAAQ,CAACO,aAAa,EAAd,CAAR,CARkB,CASlB;;EACAP,QAAQ,CAACQ,MAAM,CAAC,YAAD,CAAP,CAAR,CAVkB,CAWlB;;EACAR,QAAQ,CAACS,SAAS,CAAC,CAAD,CAAV,CAAR;;EAEA,IAAIP,MAAM,KAAK,CAAf,EAAkB;IAChBP,WAAW;EACZ;;EAEDK,QAAQ,CAACU,UAAU,CAACd,SAAD,CAAX,CAAR;EAEAI,QAAQ,CACND,QAAQ,CAAC;IACPH,SAAS,EAAEA,SADJ;IAEPC,UAAU,EAAEA,UAFL;IAGPC,SAAS,EAAEA;EAHJ,CAAD,CADF,CAAR;AAOC,CA3BL,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAtEMC,Q;UACeN,W,EAGbC,W;;;AAqER,MAAMiB,WAAW,GAAG,MAAK;EACrB,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAG;IACrBA,OAAO,CAACd,QAAQ,EAAT,CAAP;EACP,CAFM,CAAP;AAGH,CAJD;;AAMA,eAAee,QAAf,GAAyB;EACrBC,OAAO,CAACC,GAAR,CAAY,UAAZ;EACA,MAAMC,GAAG,GAAG,MAAMN,WAAW,EAA7B;EACAI,OAAO,CAACC,GAAR,CAAYpB,SAAS,GAAG,GAAZ,GAAkBC,UAAlB,GAA+B,GAA/B,GAAqCC,SAAjD;AAEH;;AAGD,SAAQa,WAAR,EAAoBG,QAApB,EAA6BlB,SAA7B,EAAwCC,UAAxC,EAAqDC,SAArD"},"metadata":{},"sourceType":"module"}