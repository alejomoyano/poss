{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\src\\\\components\\\\Pomodoro.js\";\nimport React, { Fragment } from 'react'; //import { ResetButton } from './ResetButton'\n\nfunction Pomodoro() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Pomodoro; // PRIMERA OPCION QUE HICE\n\n/*\r\nlet initialMinutes = 25;\r\nlet initialSeconds = 0;\r\nlet flag = false;\r\n  const[minutes, setMinutes] = useState(initialMinutes);\r\nconst[seconds, setSeconds] = useState(initialSeconds);\r\nconst[displayMessage, setDisplayMessage] = useState(false);\r\n  useEffect(() =>{\r\n    let interval = setInterval(() => {\r\n        clearInterval(interval);\r\n          if(seconds === 0){\r\n            if(minutes !== 0){\r\n                setSeconds(59);\r\n                setMinutes(minutes-1);\r\n            } else {\r\n                let minutes = displayMessage ? 24 : 4;\r\n                let seconds = 59;\r\n                  setSeconds(seconds);\r\n                setMinutes(minutes);\r\n                setDisplayMessage(!displayMessage);\r\n            }\r\n        } else {\r\n            setSeconds(seconds - 1);\r\n        }\r\n        \r\n    }, 1000)\r\n}, [seconds]);\r\n  const timerMinutes = (minutes < 10) ? `0${minutes}` : minutes;\r\nconst timerSeconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n  function onToggleReset (){\r\n    setMinutes(initialMinutes);\r\n    setSeconds(initialSeconds);\r\n    flag = !flag;\r\n}\r\n    return (\r\n<Fragment>\r\n    <div className='message'>\r\n        {displayMessage && <div>Break time! New session starts in:</div>}\r\n    </div>\r\n    <div className='timer'>\r\n        {timerMinutes}:{timerSeconds}\r\n    </div>\r\n    <Button variant=\"contained\" onClick={onToggleReset}>Reset</Button>\r\n</Fragment>\r\n)\r\n*/","map":{"version":3,"names":["React","Fragment","Pomodoro"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Pomodoro.js"],"sourcesContent":["import React, {Fragment} from 'react'\r\n//import { ResetButton } from './ResetButton'\r\n\r\nfunction Pomodoro() {\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n\r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default Pomodoro\r\n\r\n// PRIMERA OPCION QUE HICE\r\n\r\n    /*\r\n    let initialMinutes = 25;\r\n    let initialSeconds = 0;\r\n    let flag = false;\r\n\r\n    const[minutes, setMinutes] = useState(initialMinutes);\r\n    const[seconds, setSeconds] = useState(initialSeconds);\r\n    const[displayMessage, setDisplayMessage] = useState(false);\r\n\r\n    useEffect(() =>{\r\n        let interval = setInterval(() => {\r\n            clearInterval(interval);\r\n\r\n            if(seconds === 0){\r\n                if(minutes !== 0){\r\n                    setSeconds(59);\r\n                    setMinutes(minutes-1);\r\n                } else {\r\n                    let minutes = displayMessage ? 24 : 4;\r\n                    let seconds = 59;\r\n\r\n                    setSeconds(seconds);\r\n                    setMinutes(minutes);\r\n                    setDisplayMessage(!displayMessage);\r\n                }\r\n            } else {\r\n                setSeconds(seconds - 1);\r\n            }\r\n            \r\n        }, 1000)\r\n    }, [seconds]);\r\n\r\n    const timerMinutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n    const timerSeconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n\r\n    function onToggleReset (){\r\n        setMinutes(initialMinutes);\r\n        setSeconds(initialSeconds);\r\n        flag = !flag;\r\n    }\r\n\r\n      return (\r\n    <Fragment>\r\n        <div className='message'>\r\n            {displayMessage && <div>Break time! New session starts in:</div>}\r\n        </div>\r\n        <div className='timer'>\r\n            {timerMinutes}:{timerSeconds}\r\n        </div>\r\n        <Button variant=\"contained\" onClick={onToggleReset}>Reset</Button>\r\n    </Fragment>\r\n  )\r\n*/\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AAEA,SAASC,QAAT,GAAoB;EAElB,oBACE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAQD;;AAED,eAAeA,QAAf,C,CAEA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}