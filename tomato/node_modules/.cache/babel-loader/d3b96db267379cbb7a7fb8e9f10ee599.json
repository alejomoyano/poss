{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { incrementCycle, incrementSubCycle, setStatus } from \"../../redux/slices/timer\";\nconst {\n  value: {\n    status,\n    subCycle\n  }\n} = useSelector(state => state.timer);\nconst [actualMinutes, setActualMinutes] = useState(0);\nconst [actualSeconds, setActualSeconds] = useState(0);\nconst dispatch = useDispatch();\nconst [interv, setInterv] = useState(); //  Study Time functions\n\nconst studyStart = () => {\n  if (status === 1) {\n    dispatch(incrementSubCycle()); //updateSubCycleCount += 1;\n    //setSubCycleCount(updateSubCycleCount);\n\n    if (subCycle === 4) {\n      dispatch(incrementCycle()); //updateCycleCount += 1;\n      //setCycleCount(updateCycleCount);\n    }\n  }\n\n  clearInterval(interv);\n\n  if (actualMinutes === 0 && actualSeconds === 0) {\n    alert(\"Set study time\");\n  } else {\n    studyRun();\n    dispatch(setStatus(5)); //setStatus(5);\n\n    setInterv(setInterval(studyRun, 5));\n  }\n};\n\nconst studyRun = () => {\n  if (updateSeconds === 0) {\n    if (updateMinutes !== 0) {\n      updateMinutes--;\n      updateSeconds = 59;\n      setActualMinutes(updateMinutes);\n      setActualSeconds(updateSeconds);\n    } else {\n      setActualMinutes(userShortBreak);\n      setMsg(\"Short Break Time\");\n      dispatch(setStatus(2)); //setStatus(2);\n    }\n\n    if (subCycleCount >= 3 && updateSeconds === 0 && updateMinutes === 0) {\n      dispatch(setMsg(\"Long Break Time\")); //setMsg(\"Long Break Time\");\n\n      setStatus(3);\n      clearInterval(interv);\n      setActualMinutes(userLongBreak);\n    }\n  } else {\n    updateSeconds--;\n    setActualMinutes(updateMinutes);\n    setActualSeconds(updateSeconds);\n  }\n}; //  Short Break functions\n\n\nconst shortBreakStart = () => {\n  clearInterval(interv);\n  dispatch(setStatus(7)); //setStatus(7);\n\n  shortBreakRun();\n  setInterv(setInterval(shortBreakRun, 5));\n};\n\nconst shortBreakRun = () => {\n  if (updateSeconds === 0) {\n    if (updateMinutes !== 0) {\n      updateMinutes--;\n      updateSeconds = 59;\n      setActualMinutes(updateMinutes);\n      setActualSeconds(updateSeconds);\n    } else {\n      setActualMinutes(userStudyTime);\n      dispatch(setMsg(\"Study Time\")); //setMsg(\"Study Time\");\n\n      dispatch(setStatus(1)); //setStatus(1);\n    }\n  } else {\n    updateSeconds--;\n    setActualMinutes(updateMinutes);\n    setActualSeconds(updateSeconds);\n  }\n}; // Long Break functions\n\n\nconst longBreakStart = () => {\n  clearInterval(interv);\n  dispatch(setStatus(9)); //setStatus(9);\n\n  longBreakRun();\n  setInterv(setInterval(longBreakRun, 5));\n};\n\nconst longBreakRun = () => {\n  if (updateSeconds === 0) {\n    if (updateMinutes !== 0) {\n      updateMinutes--;\n      updateSeconds = 59;\n    } else {\n      dispatch(setStatus(4)); //setStatus(4);\n    }\n  } else {\n    updateSeconds--;\n  }\n\n  setActualMinutes(updateMinutes);\n  setActualSeconds(updateSeconds);\n}; // General functions\n\n\nconst stop = () => {\n  if (status === 5) {\n    clearInterval(interv);\n    dispatch(setStatus(6)); //setStatus(6);\n  } else if (status === 7) {\n    clearInterval(interv);\n    dispatch(setStatus(8)); //setStatus(8);\n  } else if (status === 9) {\n    clearInterval(interv);\n    dispatch(setStatus(10)); //setStatus(10);\n  }\n};\n\nconst resume = () => {\n  if (status === 6) {\n    studyStart();\n    dispatch(setStatus(5)); //setStatus(5);\n  } else if (status === 8) {\n    shortBreakStart();\n    dispatch(setStatus(7)); //setStatus(7);\n  } else if (status === 10) {\n    longBreakStart();\n    dispatch(setStatus(9)); //setStatus(9);\n  }\n};\n\nconst backToStart = () => {\n  dispatch(resetSubCycle()); //setSubCycleCount(0);\n\n  dispatch(setMsg(\"Study Time\")); //setMsg(\"Study Time\");\n\n  setActualMinutes(userStudyTime);\n  clearInterval(interv);\n\n  if (status === 4) {\n    dispatch(setStatus(1)); //setStatus(1);\n  }\n};\n\nconst skip = () => {\n  clearInterval(interv);\n\n  if (status === 5 || status === 6 && subCycleCount <= 3) {\n    setStatus(2);\n    setMsg(\"Short Break Time\");\n    setActualMinutes(userShortBreak);\n    setActualSeconds(0);\n  } else if (status === 7 || status === 8 || status === 6 && subCycleCount > 3) {\n    setStatus(3);\n    setMsg(\"Long Break Time\");\n    setActualMinutes(userLongBreak);\n    setActualSeconds(0);\n  }\n};\n\nexport { studyStart, studyRun, shortBreakStart, shortBreakRun, longBreakStart, longBreakRun, stop, resume, backToStart, skip };\nexport { actualMinutes, actualSeconds };","map":{"version":3,"names":["useDispatch","useSelector","incrementCycle","incrementSubCycle","setStatus","value","status","subCycle","state","timer","actualMinutes","setActualMinutes","useState","actualSeconds","setActualSeconds","dispatch","interv","setInterv","studyStart","clearInterval","alert","studyRun","setInterval","updateSeconds","updateMinutes","userShortBreak","setMsg","subCycleCount","userLongBreak","shortBreakStart","shortBreakRun","userStudyTime","longBreakStart","longBreakRun","stop","resume","backToStart","resetSubCycle","skip"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/TimerController.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  incrementCycle,\r\n  incrementSubCycle,\r\n  setStatus,\r\n} from \"../../redux/slices/timer\";\r\n\r\nconst {\r\n  value: { status, subCycle },\r\n} = useSelector((state) => state.timer);\r\n\r\nconst [actualMinutes, setActualMinutes] = useState(0);\r\nconst [actualSeconds, setActualSeconds] = useState(0);\r\nconst dispatch = useDispatch();\r\n\r\nconst [interv, setInterv] = useState();\r\n\r\n//  Study Time functions\r\n\r\nconst studyStart = () => {\r\n  if (status === 1) {\r\n    dispatch(incrementSubCycle());\r\n    //updateSubCycleCount += 1;\r\n    //setSubCycleCount(updateSubCycleCount);\r\n    if (subCycle === 4) {\r\n      dispatch(incrementCycle());\r\n      //updateCycleCount += 1;\r\n      //setCycleCount(updateCycleCount);\r\n    }\r\n  }\r\n  clearInterval(interv);\r\n  if (actualMinutes === 0 && actualSeconds === 0) {\r\n    alert(\"Set study time\");\r\n  } else {\r\n    studyRun();\r\n    dispatch(setStatus(5));\r\n    //setStatus(5);\r\n    setInterv(setInterval(studyRun, 5));\r\n  }\r\n};\r\n\r\nconst studyRun = () => {\r\n  if (updateSeconds === 0) {\r\n    if (updateMinutes !== 0) {\r\n      updateMinutes--;\r\n      updateSeconds = 59;\r\n      setActualMinutes(updateMinutes);\r\n      setActualSeconds(updateSeconds);\r\n    } else {\r\n      setActualMinutes(userShortBreak);\r\n      setMsg(\"Short Break Time\");\r\n      dispatch(setStatus(2));\r\n      //setStatus(2);\r\n    }\r\n    if (subCycleCount >= 3 && updateSeconds === 0 && updateMinutes === 0) {\r\n      dispatch(setMsg(\"Long Break Time\"));\r\n      //setMsg(\"Long Break Time\");\r\n      setStatus(3);\r\n      clearInterval(interv);\r\n      setActualMinutes(userLongBreak);\r\n    }\r\n  } else {\r\n    updateSeconds--;\r\n    setActualMinutes(updateMinutes);\r\n    setActualSeconds(updateSeconds);\r\n  }\r\n};\r\n\r\n//  Short Break functions\r\n\r\nconst shortBreakStart = () => {\r\n  clearInterval(interv);\r\n  dispatch(setStatus(7));\r\n  //setStatus(7);\r\n  shortBreakRun();\r\n  setInterv(setInterval(shortBreakRun, 5));\r\n};\r\n\r\nconst shortBreakRun = () => {\r\n  if (updateSeconds === 0) {\r\n    if (updateMinutes !== 0) {\r\n      updateMinutes--;\r\n      updateSeconds = 59;\r\n      setActualMinutes(updateMinutes);\r\n      setActualSeconds(updateSeconds);\r\n    } else {\r\n      setActualMinutes(userStudyTime);\r\n      dispatch(setMsg(\"Study Time\"));\r\n      //setMsg(\"Study Time\");\r\n      dispatch(setStatus(1));\r\n      //setStatus(1);\r\n    }\r\n  } else {\r\n    updateSeconds--;\r\n    setActualMinutes(updateMinutes);\r\n    setActualSeconds(updateSeconds);\r\n  }\r\n};\r\n\r\n// Long Break functions\r\n\r\nconst longBreakStart = () => {\r\n  clearInterval(interv);\r\n  dispatch(setStatus(9));\r\n  //setStatus(9);\r\n  longBreakRun();\r\n  setInterv(setInterval(longBreakRun, 5));\r\n};\r\n\r\nconst longBreakRun = () => {\r\n  if (updateSeconds === 0) {\r\n    if (updateMinutes !== 0) {\r\n      updateMinutes--;\r\n      updateSeconds = 59;\r\n    } else {\r\n      dispatch(setStatus(4));\r\n      //setStatus(4);\r\n    }\r\n  } else {\r\n    updateSeconds--;\r\n  }\r\n  setActualMinutes(updateMinutes);\r\n  setActualSeconds(updateSeconds);\r\n};\r\n\r\n// General functions\r\n\r\nconst stop = () => {\r\n  if (status === 5) {\r\n    clearInterval(interv);\r\n    dispatch(setStatus(6));\r\n    //setStatus(6);\r\n  } else if (status === 7) {\r\n    clearInterval(interv);\r\n    dispatch(setStatus(8));\r\n    //setStatus(8);\r\n  } else if (status === 9) {\r\n    clearInterval(interv);\r\n    dispatch(setStatus(10));\r\n    //setStatus(10);\r\n  }\r\n};\r\n\r\nconst resume = () => {\r\n  if (status === 6) {\r\n    studyStart();\r\n    dispatch(setStatus(5));\r\n    //setStatus(5);\r\n  } else if (status === 8) {\r\n    shortBreakStart();\r\n    dispatch(setStatus(7));\r\n    //setStatus(7);\r\n  } else if (status === 10) {\r\n    longBreakStart();\r\n    dispatch(setStatus(9));\r\n    //setStatus(9);\r\n  }\r\n};\r\n\r\nconst backToStart = () => {\r\n  dispatch(resetSubCycle());\r\n  //setSubCycleCount(0);\r\n  dispatch(setMsg(\"Study Time\"));\r\n  //setMsg(\"Study Time\");\r\n  setActualMinutes(userStudyTime);\r\n  clearInterval(interv);\r\n  if (status === 4) {\r\n    dispatch(setStatus(1));\r\n    //setStatus(1);\r\n  }\r\n};\r\n\r\nconst skip = () => {\r\n  clearInterval(interv);\r\n  if (status === 5 || (status === 6 && subCycleCount <= 3)) {\r\n    setStatus(2);\r\n    setMsg(\"Short Break Time\");\r\n    setActualMinutes(userShortBreak);\r\n    setActualSeconds(0);\r\n  } else if (\r\n    status === 7 ||\r\n    status === 8 ||\r\n    (status === 6 && subCycleCount > 3)\r\n  ) {\r\n    setStatus(3);\r\n    setMsg(\"Long Break Time\");\r\n    setActualMinutes(userLongBreak);\r\n    setActualSeconds(0);\r\n  }\r\n};\r\n\r\nexport {\r\n  studyStart,\r\n  studyRun,\r\n  shortBreakStart,\r\n  shortBreakRun,\r\n  longBreakStart,\r\n  longBreakRun,\r\n  stop,\r\n  resume,\r\n  backToStart,\r\n  skip,\r\n};\r\n\r\nexport { actualMinutes, actualSeconds };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}