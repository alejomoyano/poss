{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot, deleteField, updateDoc, doc, setDoc, getDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport ChatScreen from \"../../components/Chat\";\nconst initialState = {\n  value: {},\n  error: null\n};\nconst createChat = createAsyncThunk(\"createChat\", async (id, thunkAPI) => {\n  try {\n    const date = new Date();\n    const app = getApp();\n    const db = getFirestore(app); // creamos el documento\n\n    const document = doc(db, \"chat\", id);\n    await setDoc(document, {\n      mensajes: [{\n        content: \"Add messages\",\n        date: date.getDate()\n      }]\n    }); // nos suscribimos al documento\n\n    onSnapshot(document, snapshot => {\n      const chat = snapshot.data().mensajes;\n      console.log(chat);\n      return thunkAPI.dispatch(setMensajes({\n        document: document,\n        mensajes: chat\n      }));\n    }, error => {\n      return thunkAPI.rejectWithValue({\n        error\n      });\n    });\n    return thunkAPI.fulfillWithValue({\n      document\n    });\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error\n    });\n  }\n});\nexport const messagesSlice = createSlice({\n  name: 'mensajes',\n  initialState,\n  reducers: {\n    setMessages: (state, action) => {\n      state.mensajes = action.payload.mensajes;\n    }\n  }\n});\nconst {\n  setMensajes\n} = messagesSlice.actions;\n\nconst addMessage = async message => {\n  try {\n    const date = new Date();\n    const app = getApp();\n    const db = getFirestore(app);\n    const chat = doc(db, \"chat/H2iPRKX2JORZMOWO99Kj\");\n    console.log(chat);\n    await updateDoc(chat, {\n      mensajes: arrayUnion(message)\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const {\n  setMenssages\n} = messagesSlice.actions;\nexport { addMessage };\nexport default messagesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getApp","getFirestore","collection","onSnapshot","deleteField","updateDoc","doc","setDoc","getDoc","arrayUnion","arrayRemove","useState","ChatScreen","initialState","value","error","createChat","id","thunkAPI","date","Date","app","db","document","mensajes","content","getDate","snapshot","chat","data","console","log","dispatch","setMensajes","rejectWithValue","fulfillWithValue","messagesSlice","name","reducers","setMessages","state","action","payload","actions","addMessage","message","setMenssages","reducer"],"sources":["C:/Users/Usuario/Documents/GitHub/poss/tomato/src/redux/slices/ChatSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getApp } from \"firebase/app\";\r\nimport {\r\n    getFirestore,\r\n    collection,\r\n    onSnapshot,\r\n    deleteField,\r\n    updateDoc,\r\n    doc,\r\n    setDoc,\r\n    getDoc,\r\n    arrayUnion,\r\n    arrayRemove,\r\n  } from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\nimport ChatScreen from \"../../components/Chat\";\r\n\r\n  const initialState = {\r\n    value: {},\r\n    error: null,\r\n  };\r\n\r\n  \r\n  \r\n\r\n  const createChat = createAsyncThunk(\r\n    \"createChat\",\r\n    async (id, thunkAPI) => {\r\n      try {\r\n        const date = new Date(); \r\n        const app = getApp();\r\n        const db = getFirestore(app);\r\n\r\n  \r\n        // creamos el documento\r\n        const document = doc(db, \"chat\", id);\r\n        await setDoc(document, {\r\n          mensajes: [\r\n            {\r\n              content: \"Add messages\",\r\n              date: date.getDate(),\r\n            },\r\n          ],\r\n        });\r\n  \r\n        // nos suscribimos al documento\r\n        onSnapshot(\r\n          document,\r\n          (snapshot) => {\r\n            const chat = snapshot.data().mensajes;\r\n            console.log(chat);\r\n            return thunkAPI.dispatch(\r\n              setMensajes({ document: document, mensajes: chat })\r\n            );\r\n          },\r\n          (error) => {\r\n            return thunkAPI.rejectWithValue({ error });\r\n          }\r\n        );\r\n        return thunkAPI.fulfillWithValue({ document });\r\n      } catch (error) {\r\n        return thunkAPI.rejectWithValue({ error });\r\n      }\r\n    }\r\n  );\r\n\r\n  export const messagesSlice = createSlice({\r\n    name: 'mensajes',\r\n    initialState,\r\n    reducers: {\r\n        setMessages: (state, action) => {\r\n            state.mensajes = action.payload.mensajes\r\n        } \r\n    }\r\n\r\n\r\n  })\r\n\r\n  const { setMensajes } = messagesSlice.actions\r\n\r\n  const addMessage = async (message) => {\r\n       try {\r\n        const date = new Date(); \r\n        const app = getApp();\r\n        const db = getFirestore(app);\r\n        const chat = doc(db, \"chat/H2iPRKX2JORZMOWO99Kj\");\r\n        console.log(chat);\r\n\r\n         await updateDoc(chat, {\r\n           mensajes: arrayUnion(message),\r\n         });\r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n     };\r\n\r\n  \r\n\r\n\r\n  export const {setMenssages} = messagesSlice.actions\r\n\r\n  export{\r\n    addMessage\r\n  } \r\n  \r\n\r\n  export default messagesSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}