{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Bruno\\\\github\\\\poss2\\\\poss\\\\tomato\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss2\\\\poss\\\\tomato\\\\src\\\\components\\\\StartButton.js\";\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nexport function StartButton() {\n  var _useState = useState('Start'),\n      _useState2 = _slicedToArray(_useState, 2),\n      startPause = _useState2[0],\n      setStartPause = _useState2[1];\n\n  var handleClick = function handleClick() {\n    if (startPause === 'Start') {\n      setStartPause('Pause');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, startPause);\n}","map":{"version":3,"names":["React","useState","Button","StartButton","startPause","setStartPause","handleClick"],"sources":["C:/Users/Bruno/github/poss2/poss/tomato/src/components/StartButton.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { Button } from '@mui/material';\r\n\r\nexport function StartButton() {\r\n\r\n    const [startPause, setStartPause] = useState('Start');\r\n    const handleClick = () => {\r\n        if(startPause === 'Start'){\r\n            setStartPause('Pause');\r\n        }\r\n    };\r\n\r\n  return (\r\n    <Button variant=\"contained\" onClick={handleClick}>{startPause}</Button>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAO,SAASC,WAAT,GAAuB;EAAA,gBAEUF,QAAQ,CAAC,OAAD,CAFlB;EAAA;EAAA,IAEnBG,UAFmB;EAAA,IAEPC,aAFO;;EAG1B,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtB,IAAGF,UAAU,KAAK,OAAlB,EAA0B;MACtBC,aAAa,CAAC,OAAD,CAAb;IACH;EACJ,CAJD;;EAMF,oBACE,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,OAAO,EAAEC,WAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAmDF,UAAnD,CADF;AAGD"},"metadata":{},"sourceType":"module"}