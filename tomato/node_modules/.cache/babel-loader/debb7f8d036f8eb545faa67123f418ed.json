{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\src\\\\components\\\\Timer\\\\TimerFunctionality.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TimerView from \"./TimerView\";\nimport Buttons from \"./Buttons\";\nimport { setTimes, setStatus, resetSubCycle, setMsg, setMinutes } from \"../../redux/slices/timer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { asynCall } from \"./ConfigAlert\";\nimport \"../../App.css\";\nimport { BackToStart } from \"./TimerController\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimerFunctionality() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    values: {\n      status,\n      msg\n    }\n  } = useSelector(state => state.timer); //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\n\n  const ConfigTimes = () => {\n    studyTime = prompt('Ingresa tiempo');\n    shortBreak = prompt('Ingresa tiempo');\n    longBreak = prompt('Ingresa tiempo'); //const { studyTime, shortBreak, longBreak } = asynCall();\n    //setSubCycleCount(0);\n    //dispatch(resetSubCycle());\n    //setMsg(\"Study Time\");\n    //dispatch(setMsg(\"Study Time\"));\n    //setStatus(1);\n    //dispatch(setStatus(1));\n    // if (status === 4) {\n    //   BackToStart();\n    // }\n    // dispatch(setMinutes(studyTime));\n    // dispatch(\n    //   setTimes({\n    //     studyTime: studyTime,\n    //     shortBreak: shortBreak,\n    //     longBreak: longBreak,\n    //   })\n    // );\n    //setUserStudyTime(result.values.configStudyTime);\n    //setActualMinutes(result.values.configStudyTime);\n    //setUserShortBreak(result.values.configShortBreak);\n    //setUserLongBreak(result.values.configLongBreak);\n  };\n\n  const configAlert = () => {\n    return new Promise(resolve => {\n      resolve(ConfigTimes());\n    });\n  };\n\n  async function asynCall() {\n    console.log('entrando');\n    const obj = await configAlert();\n    console.log('objeto' + obj);\n    return obj;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerFunctionality\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"msg-text\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      ConfigTimes: ConfigTimes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimerFunctionality, \"ztH0vuwOrUV44xmheMzaO3H6EWk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TimerFunctionality;\nexport default TimerFunctionality;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerFunctionality\");","map":{"version":3,"names":["React","TimerView","Buttons","setTimes","setStatus","resetSubCycle","setMsg","setMinutes","useDispatch","useSelector","asynCall","BackToStart","TimerFunctionality","dispatch","values","status","msg","state","timer","ConfigTimes","studyTime","prompt","shortBreak","longBreak","configAlert","Promise","resolve","console","log","obj"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/TimerFunctionality.js"],"sourcesContent":["import React from \"react\";\r\nimport TimerView from \"./TimerView\";\r\nimport Buttons from \"./Buttons\";\r\nimport {\r\n  setTimes,\r\n  setStatus,\r\n  resetSubCycle,\r\n  setMsg,\r\n  setMinutes,\r\n} from \"../../redux/slices/timer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { asynCall} from \"./ConfigAlert\";\r\n\r\nimport \"../../App.css\";\r\nimport { BackToStart } from \"./TimerController\";\r\n\r\nfunction TimerFunctionality() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    values: { status, msg },\r\n  } = useSelector((state) => state.timer);\r\n\r\n  //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\r\n\r\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\r\n\r\n  const ConfigTimes = () => {\r\n    studyTime = prompt('Ingresa tiempo')\r\n    shortBreak = prompt('Ingresa tiempo')\r\n    longBreak = prompt('Ingresa tiempo')\r\n    //const { studyTime, shortBreak, longBreak } = asynCall();\r\n\r\n    //setSubCycleCount(0);\r\n    //dispatch(resetSubCycle());\r\n    //setMsg(\"Study Time\");\r\n    //dispatch(setMsg(\"Study Time\"));\r\n    //setStatus(1);\r\n    //dispatch(setStatus(1));\r\n\r\n    // if (status === 4) {\r\n    //   BackToStart();\r\n    // }\r\n\r\n    // dispatch(setMinutes(studyTime));\r\n\r\n    // dispatch(\r\n    //   setTimes({\r\n    //     studyTime: studyTime,\r\n    //     shortBreak: shortBreak,\r\n    //     longBreak: longBreak,\r\n    //   })\r\n    // );\r\n\r\n    //setUserStudyTime(result.values.configStudyTime);\r\n    //setActualMinutes(result.values.configStudyTime);\r\n    //setUserShortBreak(result.values.configShortBreak);\r\n    //setUserLongBreak(result.values.configLongBreak);\r\n  };\r\n\r\n\r\n  const configAlert = () =>{\r\n    return new Promise(resolve =>{\r\n            resolve(ConfigTimes());\r\n    });\r\n}\r\n\r\nasync function asynCall(){\r\n    console.log('entrando');\r\n    const obj = await configAlert();\r\n    console.log('objeto' + obj)\r\n    return obj;\r\n}\r\n\r\n  return (\r\n    <div className=\"timerFunctionality\">\r\n      <span className=\"msg-text\">{msg}</span>\r\n\r\n      <TimerView />\r\n\r\n      <Buttons ConfigTimes={ConfigTimes} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerFunctionality;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,0BANP;AAOA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAwB,eAAxB;AAEA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,mBAA5B;;;AAEA,SAASC,kBAAT,GAA8B;EAAA;;EAC5B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAM;IACJM,MAAM,EAAE;MAAEC,MAAF;MAAUC;IAAV;EADJ,IAEFP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAFf,CAF4B,CAM5B;EAEA;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACxBC,SAAS,GAAGC,MAAM,CAAC,gBAAD,CAAlB;IACAC,UAAU,GAAGD,MAAM,CAAC,gBAAD,CAAnB;IACAE,SAAS,GAAGF,MAAM,CAAC,gBAAD,CAAlB,CAHwB,CAIxB;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;EACD,CA/BD;;EAkCA,MAAMG,WAAW,GAAG,MAAK;IACvB,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAG;MACrBA,OAAO,CAACP,WAAW,EAAZ,CAAP;IACP,CAFM,CAAP;EAGH,CAJC;;EAMF,eAAeT,QAAf,GAAyB;IACrBiB,OAAO,CAACC,GAAR,CAAY,UAAZ;IACA,MAAMC,GAAG,GAAG,MAAML,WAAW,EAA7B;IACAG,OAAO,CAACC,GAAR,CAAY,WAAWC,GAAvB;IACA,OAAOA,GAAP;EACH;;EAEC,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4Bb;IAA5B;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE,QAAC,OAAD;MAAS,WAAW,EAAEG;IAAtB;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAlEQP,kB;UACUJ,W,EAGbC,W;;;KAJGG,kB;AAoET,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}