{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\poss\\\\tomato\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FirebaseError, getApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot, deleteField, updateDoc, doc, setDoc, getDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport Message from './Mensaje';\nimport { addMessage } from \"../redux/slices/ChatSlice\";\nimport './Chat.css';\nimport ChatHeader from \"./ChatHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatScreen() {\n  _s();\n\n  const [inputMensaje, setInputMensaje] = useState(\"\"); //para setear mensajes\n\n  const [MessageList, setMessageList] = useState([]); //array con la collecion de mensajes\n\n  const dispatch = useDispatch();\n  const app = getApp();\n  const db = getFirestore(app); //maneja el envio de mensajes guardandolos en MessageList\n\n  function sendMessage(e) {\n    e.preventDefault();\n    addMessage(inputMensaje);\n    setInputMensaje(\" \"); //console.log(message)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), \"const Fetchdata = ()=>\", db.collection(\"Mensajes\").get().then(querySnapshot => {\n      // Loop through the data and store\n      // it in array to display\n      querySnapshot.forEach(element => {\n        var data = element.data();\n        setMessageList(arr => [...arr, data]);\n      });\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: MessageList.map(data => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", data.mensajes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          disabled: false,\n          value: inputMensaje,\n          onChange: e => setInputMensaje(e.target.value),\n          placeholder: \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: false,\n          value: inputMensaje,\n          className: \"chat__inputButton\",\n          type: \"submit\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__inputIcons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"Chat.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ChatScreen, \"G1+lLfF+9viLO7QKtYVNRSCLPj4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ChatScreen;\nexport default ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","useSelector","FirebaseError","getApp","getFirestore","collection","onSnapshot","deleteField","updateDoc","doc","setDoc","getDoc","arrayUnion","arrayRemove","Message","addMessage","ChatHeader","ChatScreen","inputMensaje","setInputMensaje","MessageList","setMessageList","dispatch","app","db","sendMessage","e","preventDefault","get","then","querySnapshot","forEach","element","data","arr","map","mensajes","target","value"],"sources":["C:/Users/Usuario/Documents/GitHub/poss/tomato/src/components/Chat.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { FirebaseError, getApp } from \"firebase/app\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  deleteField,\r\n  updateDoc,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  arrayUnion,\r\n  arrayRemove,\r\n} from \"firebase/firestore\";\r\nimport Message  from './Mensaje';\r\nimport { addMessage } from \"../redux/slices/ChatSlice\";\r\n\r\n\r\n\r\n\r\nimport './Chat.css';\r\nimport ChatHeader from \"./ChatHeader\";\r\n\r\n\r\n\r\nfunction ChatScreen(){\r\n    \r\n    \r\n    const [inputMensaje, setInputMensaje] = useState(\"\"); //para setear mensajes\r\n    const [MessageList, setMessageList] = useState([]); //array con la collecion de mensajes\r\n    const dispatch = useDispatch();\r\n    const app = getApp()\r\n    const db = getFirestore(app)\r\n    //maneja el envio de mensajes guardandolos en MessageList\r\n\r\n  \r\n\r\n    function sendMessage(e){\r\n        e.preventDefault();\r\n        addMessage(inputMensaje)\r\n        \r\n        \r\n        \r\n        \r\n        setInputMensaje(\" \")\r\n        //console.log(message)\r\n    }\r\n\r\n\r\n   \r\n    \r\n    \r\n    return( <div className=\"chat\">\r\n\r\n        <ChatHeader />\r\n        \r\n        const Fetchdata = ()=>{\r\n            db.collection(\"Mensajes\").get().then((querySnapshot) => {\r\n             \r\n            // Loop through the data and store\r\n            // it in array to display\r\n                    querySnapshot.forEach(element => {\r\n                    var data = element.data();\r\n                    setMessageList(arr => [...arr , data]);\r\n                  \r\n                });\r\n            })\r\n        }\r\n            \r\n        <div>\r\n            \r\n          \r\n            {\r\n                MessageList.map((data) => (\r\n                <span> {data.mensajes}</span>\r\n                ))\r\n            }\r\n            </div>\r\n        \r\n        \r\n        <div className=\"chat__input\">\r\n           \r\n           \r\n                <form onSubmit={sendMessage}>\r\n                    <input type=\"text\" \r\n                    disabled={false} \r\n                    value={inputMensaje} \r\n                    onChange={(e)=>setInputMensaje(e.target.value)} \r\n                    placeholder=\"Type your message\"\r\n                    />\r\n\r\n                    <button disabled={false} value={inputMensaje} className=\"chat__inputButton\" type=\"submit\">\r\n                        Send Message\r\n                    </button>\r\n\r\n                </form>\r\n            \r\n\r\n            <div className=\"chat__inputIcons\">\r\n               \r\n                \r\n            </div>\r\n            <link href=\"Chat.css\"></link>\r\n        </div>\r\n    \r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChatScreen;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,cAAtC;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,GANF,EAOEC,MAPF,EAQEC,MARF,EASEC,UATF,EAUEC,WAVF,QAWO,oBAXP;AAYA,OAAOC,OAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AAKA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,SAASC,UAAT,GAAqB;EAAA;;EAGjB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD,CAHiB,CAGqC;;EACtD,MAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C,CAJiB,CAImC;;EACpD,MAAMyB,QAAQ,GAAGtB,WAAW,EAA5B;EACA,MAAMuB,GAAG,GAAGpB,MAAM,EAAlB;EACA,MAAMqB,EAAE,GAAGpB,YAAY,CAACmB,GAAD,CAAvB,CAPiB,CAQjB;;EAIA,SAASE,WAAT,CAAqBC,CAArB,EAAuB;IACnBA,CAAC,CAACC,cAAF;IACAZ,UAAU,CAACG,YAAD,CAAV;IAKAC,eAAe,CAAC,GAAD,CAAf,CAPmB,CAQnB;EACH;;EAMD,oBAAQ;IAAK,SAAS,EAAC,MAAf;IAAA,wBAEJ,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFI,4BAKAK,EAAE,CAACnB,UAAH,CAAc,UAAd,EAA0BuB,GAA1B,GAAgCC,IAAhC,CAAsCC,aAAD,IAAmB;MAExD;MACA;MACQA,aAAa,CAACC,OAAd,CAAsBC,OAAO,IAAI;QACjC,IAAIC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAX;QACAZ,cAAc,CAACa,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAAUD,IAAV,CAAR,CAAd;MAEH,CAJG;IAKP,CATD,CALA,eAiBJ;MAAA,UAIQb,WAAW,CAACe,GAAZ,CAAiBF,IAAD,iBAChB;QAAA,gBAAQA,IAAI,CAACG,QAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAJR;MAAA;MAAA;MAAA;IAAA,QAjBI,eA4BJ;MAAK,SAAS,EAAC,aAAf;MAAA,wBAGQ;QAAM,QAAQ,EAAEX,WAAhB;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UACA,QAAQ,EAAE,KADV;UAEA,KAAK,EAAEP,YAFP;UAGA,QAAQ,EAAGQ,CAAD,IAAKP,eAAe,CAACO,CAAC,CAACW,MAAF,CAASC,KAAV,CAH9B;UAIA,WAAW,EAAC;QAJZ;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAQ,QAAQ,EAAE,KAAlB;UAAyB,KAAK,EAAEpB,YAAhC;UAA8C,SAAS,EAAC,mBAAxD;UAA4E,IAAI,EAAC,QAAjF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHR,eAkBI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAlBJ,eAsBI;QAAM,IAAI,EAAC;MAAX;QAAA;QAAA;QAAA;MAAA,QAtBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAwDH;;GAnFQD,U;UAKYjB,W;;;KALZiB,U;AAqFT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}