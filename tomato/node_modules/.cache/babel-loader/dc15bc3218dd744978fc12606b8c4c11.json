{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\src\\\\components\\\\Timer\\\\TimerFunctionality.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TimerView from \"./TimerView\";\nimport Buttons from \"./Buttons\";\nimport { setTimes, setStatus, resetSubCycle, setMsg } from \"../../redux/slices/timer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport configAlert from \"./ConfigAlert\";\nimport \"../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimerFunctionality() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch(); //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\n\n  const ConfigTimes = () => {\n    _s();\n\n    const {\n      studyTime,\n      shortBreak,\n      longBreak\n    } = configAlert();\n    const {\n      value: status\n    } = useSelector(state => state.timer); //setSubCycleCount(0);\n\n    dispatch(resetSubCycle()); //setMsg(\"Study Time\");\n\n    dispatch(setMsg(\"Study Time\")); //setStatus(1);\n\n    dispatch(setStatus(1));\n\n    if (status === 4) {\n      backToStart();\n    }\n\n    dispatch(setMinutes(studyTime));\n    dispatch(setTimes({\n      studyTime: studyTime,\n      shortBreak: shortBreak,\n      longBreak: longBreak\n    })); //setUserStudyTime(result.value.configStudyTime);\n    //setActualMinutes(result.value.configStudyTime);\n    //setUserShortBreak(result.value.configShortBreak);\n    //setUserLongBreak(result.value.configLongBreak);\n  };\n\n  _s(ConfigTimes, \"XczsstXYX027up+EDbQrI9JuC8E=\", false, function () {\n    return [useSelector];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerFunctionality\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"msg-text\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerView, {\n      subCycleCount: subCycleCount,\n      cycleCount: cycleCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      ConfigTimes: ConfigTimes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TimerFunctionality, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TimerFunctionality;\nexport default TimerFunctionality;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerFunctionality\");","map":{"version":3,"names":["React","useState","TimerView","Buttons","setTimes","setStatus","resetSubCycle","setMsg","useDispatch","useSelector","configAlert","TimerFunctionality","dispatch","ConfigTimes","studyTime","shortBreak","longBreak","value","status","state","timer","backToStart","setMinutes","msg","subCycleCount","cycleCount"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/TimerFunctionality.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TimerView from \"./TimerView\";\r\nimport Buttons from \"./Buttons\";\r\nimport { setTimes, setStatus, resetSubCycle, setMsg, } from \"../../redux/slices/timer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport configAlert from \"./ConfigAlert\";\r\nimport \"../../App.css\";\r\n\r\nfunction TimerFunctionality() {\r\n  const dispatch = useDispatch();\r\n\r\n  //En estas variables guardamos los valores que ingresa el usuario y no son modificadas durante la ejecucion.\r\n\r\n  // Inicio configurando el Timer y guardando los valores iniciales que ingresa el usuario.\r\n\r\n  const ConfigTimes = () => {\r\n    const { studyTime, shortBreak, longBreak } = configAlert();\r\n\r\n    const { value: status } = useSelector((state) => state.timer);\r\n    //setSubCycleCount(0);\r\n    dispatch(resetSubCycle());\r\n    //setMsg(\"Study Time\");\r\n    dispatch(setMsg(\"Study Time\"));\r\n    //setStatus(1);\r\n    dispatch(setStatus(1));\r\n\r\n    if (status === 4) {\r\n      backToStart();\r\n    }\r\n\r\n    dispatch(setMinutes(studyTime));\r\n\r\n    dispatch(\r\n      setTimes({\r\n        studyTime: studyTime,\r\n        shortBreak: shortBreak,\r\n        longBreak: longBreak,\r\n      })\r\n    );\r\n\r\n    //setUserStudyTime(result.value.configStudyTime);\r\n    //setActualMinutes(result.value.configStudyTime);\r\n    //setUserShortBreak(result.value.configShortBreak);\r\n    //setUserLongBreak(result.value.configLongBreak);\r\n  };\r\n\r\n  return (\r\n    <div className=\"timerFunctionality\">\r\n      <span className=\"msg-text\">{msg}</span>\r\n\r\n      <TimerView subCycleCount={subCycleCount} cycleCount={cycleCount} />\r\n\r\n      <Buttons ConfigTimes={ConfigTimes} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerFunctionality;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,MAA7C,QAA4D,0BAA5D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,eAAP;;;AAEA,SAASC,kBAAT,GAA8B;EAAA;;EAAA;;EAC5B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAD4B,CAG5B;EAEA;;EAEA,MAAMK,WAAW,GAAG,MAAM;IAAA;;IACxB,MAAM;MAAEC,SAAF;MAAaC,UAAb;MAAyBC;IAAzB,IAAuCN,WAAW,EAAxD;IAEA,MAAM;MAAEO,KAAK,EAAEC;IAAT,IAAoBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAArC,CAHwB,CAIxB;;IACAR,QAAQ,CAACN,aAAa,EAAd,CAAR,CALwB,CAMxB;;IACAM,QAAQ,CAACL,MAAM,CAAC,YAAD,CAAP,CAAR,CAPwB,CAQxB;;IACAK,QAAQ,CAACP,SAAS,CAAC,CAAD,CAAV,CAAR;;IAEA,IAAIa,MAAM,KAAK,CAAf,EAAkB;MAChBG,WAAW;IACZ;;IAEDT,QAAQ,CAACU,UAAU,CAACR,SAAD,CAAX,CAAR;IAEAF,QAAQ,CACNR,QAAQ,CAAC;MACPU,SAAS,EAAEA,SADJ;MAEPC,UAAU,EAAEA,UAFL;MAGPC,SAAS,EAAEA;IAHJ,CAAD,CADF,CAAR,CAjBwB,CAyBxB;IACA;IACA;IACA;EACD,CA7BD;;EAP4B,GAOtBH,WAPsB;IAAA,QAUAJ,WAVA;EAAA;;EAsC5B,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4Bc;IAA5B;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,SAAD;MAAW,aAAa,EAAEC,aAA1B;MAAyC,UAAU,EAAEC;IAArD;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE,QAAC,OAAD;MAAS,WAAW,EAAEZ;IAAtB;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;IA/CQF,kB;UACUH,W;;;KADVG,kB;AAiDT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}