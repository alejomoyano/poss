{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\github\\\\poss\\\\tomato\\\\src\\\\components\\\\Timer\\\\TimerFunctionality.js\";\nimport React, { useState } from 'react';\nimport TimerView from './TimerView';\nimport Buttons from './Buttons';\nimport Message from './Message';\n\nfunction TimerFunctionality() {\n  var initialMinutes = 0;\n  var initialSeconds = 0;\n  var breakMsg = 'Break Time';\n  var studyMsg = 'Study Time';\n  var configMsg = 'Timer Configuration';\n\n  var _useState = useState(initialMinutes),\n      _useState2 = _slicedToArray(_useState, 2),\n      minutes = _useState2[0],\n      setMinutes = _useState2[1];\n\n  var _useState3 = useState(initialSeconds),\n      _useState4 = _slicedToArray(_useState3, 2),\n      seconds = _useState4[0],\n      setSeconds = _useState4[1];\n\n  var _useState5 = useState(studyMsg),\n      _useState6 = _slicedToArray(_useState5, 2),\n      msg = _useState6[0],\n      setMsg = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      interv = _useState8[0],\n      setInterv = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      status = _useState10[0],\n      setStatus = _useState10[1]; //Not started = 0\n  //started = 1\n  //stopped = 2\n  //break = 3\n  //back to study = 4\n  //config = 5\n  //breakTime solo muestra Start = 6\n\n\n  var updateM = minutes,\n      updateS = seconds;\n\n  var start = function start() {\n    if (minutes === 0 && seconds === 0) {\n      alert('Debe configurar el Timer antes de comenzar');\n    } else {\n      run();\n      setStatus(1);\n      setInterv(setInterval(run, 1000));\n    }\n  };\n\n  var run = function run() {\n    if (updateS === 0) {\n      if (updateM !== 0) {\n        updateS = 59;\n        updateM--;\n      } else {\n        setStatus(3);\n      }\n    } else {\n      updateS--;\n    }\n\n    setMinutes(updateM);\n    setSeconds(updateS);\n  };\n\n  var stop = function stop() {\n    clearInterval(interv);\n    setStatus(2);\n  };\n\n  var reset = function reset() {\n    clearInterval(interv);\n    setStatus(0);\n    setMinutes(initialMinutes);\n    setSeconds(initialSeconds);\n  };\n\n  var resume = function resume() {\n    return start();\n  }; //      ----------------------------------------- BREAK FUNCTIONALITY´S -----------------------------------------\n\n\n  var runBreak = function runBreak() {\n    if (updateS === 0) {\n      if (updateM !== 0) {\n        updateS = 59;\n        updateM--;\n      } else {\n        setStatus(4);\n      }\n    } else {\n      updateS--;\n    }\n\n    setMinutes(updateM);\n    setSeconds(updateS);\n  };\n\n  var breakRun = function breakRun() {\n    setInterv(setInterval(runBreak, 1000));\n    setStatus(7);\n\n    if (updateS === 0) {\n      if (updateM !== 0) {\n        updateS = 59;\n        updateM--;\n      }\n    } else {\n      updateS--;\n    }\n\n    setMinutes(updateM);\n    setSeconds(updateS);\n  };\n\n  var breakTime = function breakTime() {\n    clearInterval(interv);\n    setMinutes(0);\n    setSeconds(8);\n    setStatus(6);\n  };\n\n  var stopBreak = function stopBreak() {\n    clearInterval(interv);\n    setStatus(8);\n  };\n\n  var resumeBreak = function resumeBreak() {\n    run();\n    setStatus(7);\n    setInterv(setInterval(run, 1000));\n  };\n\n  var goToBreak = function goToBreak() {\n    if (status !== 2) {\n      alert('Debe parar el timer');\n    } else {\n      setMsg(breakMsg);\n      setMinutes(initialMinutes);\n      setSeconds(initialSeconds);\n      setStatus(3);\n    }\n  }; //      ----------------------------------------- CONFIG FUNCTIONALITY´S -----------------------------------------  \n\n\n  var backToStudy = function backToStudy() {\n    if (status === 7) {\n      alert('Debe parar el timer');\n    } else {\n      clearInterval(interv);\n      setMsg(studyMsg);\n      reset();\n    }\n  };\n\n  var configTimer = function configTimer() {\n    setStatus(5);\n    setMsg(configMsg);\n\n    if (status === 5) {\n      setStatus(0);\n    }\n  };\n\n  var addTimer = function addTimer() {\n    if (minutes >= 0 && minutes < 60) {\n      setMinutes(minutes + 5);\n    } else {\n      alert('Límite de tiempo de ciclo alcanzado');\n    }\n  };\n\n  var subTimer = function subTimer() {\n    if (minutes > 0) {\n      setMinutes(minutes - 5);\n    } else {\n      alert('Mínimo de tiempo alcanzado');\n    }\n  };\n\n  var backFromConfig = function backFromConfig() {\n    setMsg(studyMsg);\n    setStatus(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TimerFunctionality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    msg: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TimerView, {\n    minutes: minutes,\n    seconds: seconds,\n    status: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Buttons, {\n    status: status,\n    stop: stop,\n    reset: reset,\n    resume: resume,\n    start: start,\n    breakTime: breakTime,\n    breakRun: breakRun,\n    goToBreak: goToBreak,\n    backToStudy: backToStudy,\n    configTimer: configTimer,\n    addTimer: addTimer,\n    subTimer: subTimer,\n    backFromConfig: backFromConfig,\n    stopBreak: stopBreak,\n    resumeBreak: resumeBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default TimerFunctionality;","map":{"version":3,"names":["React","useState","TimerView","Buttons","Message","TimerFunctionality","initialMinutes","initialSeconds","breakMsg","studyMsg","configMsg","minutes","setMinutes","seconds","setSeconds","msg","setMsg","interv","setInterv","status","setStatus","updateM","updateS","start","alert","run","setInterval","stop","clearInterval","reset","resume","runBreak","breakRun","breakTime","stopBreak","resumeBreak","goToBreak","backToStudy","configTimer","addTimer","subTimer","backFromConfig"],"sources":["C:/Users/Bruno/github/poss/tomato/src/components/Timer/TimerFunctionality.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport TimerView from './TimerView'\r\nimport Buttons from './Buttons'\r\nimport Message from './Message'\r\n\r\nfunction TimerFunctionality() {\r\n\r\n    const initialMinutes = 0;\r\n    const initialSeconds = 0;\r\n    let breakMsg = 'Break Time';\r\n    let studyMsg = 'Study Time';\r\n    let configMsg = 'Timer Configuration'\r\n  \r\n    const [minutes, setMinutes] = useState(initialMinutes);\r\n    const [seconds, setSeconds] = useState(initialSeconds);\r\n    const [msg, setMsg] = useState(studyMsg);\r\n    const [interv, setInterv] = useState();\r\n    const [status, setStatus] = useState(0);\r\n    //Not started = 0\r\n    //started = 1\r\n    //stopped = 2\r\n    //break = 3\r\n    //back to study = 4\r\n    //config = 5\r\n    //breakTime solo muestra Start = 6\r\n  \r\n  \r\n    var updateM = minutes,\r\n        updateS = seconds;\r\n  \r\n    const start = () => {\r\n      if(minutes === 0 && seconds === 0){\r\n        alert('Debe configurar el Timer antes de comenzar');\r\n      } else {\r\n        run();\r\n        setStatus(1);\r\n        setInterv(setInterval(run, 1000));\r\n      }\r\n    }\r\n        \r\n    const run = () => {\r\n      if(updateS === 0){\r\n        if(updateM !== 0){\r\n          updateS = 59;\r\n          updateM--;\r\n        } else{\r\n          setStatus(3);\r\n        }\r\n        \r\n      } else {\r\n        updateS--;\r\n      }\r\n      setMinutes(updateM);\r\n      setSeconds(updateS);\r\n    }\r\n  \r\n    const stop = () => {\r\n      clearInterval(interv);\r\n      setStatus(2);\r\n    }\r\n  \r\n    const reset = () => {\r\n      clearInterval(interv);\r\n      setStatus(0);\r\n      setMinutes(initialMinutes);\r\n      setSeconds(initialSeconds);\r\n    }\r\n  \r\n    const resume = () => start();\r\n  \r\n    //      ----------------------------------------- BREAK FUNCTIONALITY´S -----------------------------------------\r\n\r\n    const runBreak = () => {\r\n      if(updateS === 0){\r\n        if(updateM !== 0){\r\n          updateS = 59;\r\n          updateM--;\r\n        } else{\r\n          setStatus(4);\r\n        }\r\n        \r\n      } else {\r\n        updateS--;\r\n      }\r\n      setMinutes(updateM);\r\n      setSeconds(updateS);\r\n    }\r\n  \r\n    const breakRun = () =>{\r\n      setInterv(setInterval(runBreak, 1000));\r\n      setStatus(7);\r\n      if(updateS === 0){\r\n        if(updateM !== 0){\r\n          updateS = 59;\r\n          updateM--;\r\n        }\r\n      } else {\r\n        updateS--;\r\n      }\r\n      setMinutes(updateM);\r\n      setSeconds(updateS);\r\n    }\r\n  \r\n    const breakTime = () =>{\r\n      clearInterval(interv);\r\n      setMinutes(0);\r\n      setSeconds(8);\r\n      setStatus(6);\r\n    }\r\n  \r\n    const stopBreak = () => {\r\n      clearInterval(interv);\r\n      setStatus(8);\r\n    }\r\n\r\n    const resumeBreak = () => {\r\n      run();\r\n      setStatus(7);\r\n      setInterv(setInterval(run, 1000));\r\n    }\r\n  \r\n    const goToBreak = () => {\r\n      if(status !== 2){\r\n        alert('Debe parar el timer');\r\n      }else{\r\n        setMsg(breakMsg);\r\n        setMinutes(initialMinutes);\r\n        setSeconds(initialSeconds);\r\n        setStatus(3);\r\n      }\r\n  \r\n    }\r\n\r\n    //      ----------------------------------------- CONFIG FUNCTIONALITY´S -----------------------------------------  \r\n  \r\n    const backToStudy = () => {\r\n      if (status === 7){\r\n        alert('Debe parar el timer');\r\n      }else {\r\n        clearInterval(interv);\r\n        setMsg(studyMsg);\r\n        reset();\r\n      }\r\n  \r\n    }\r\n  \r\n    const configTimer = () => {\r\n      setStatus(5);\r\n      setMsg(configMsg);\r\n      if(status === 5){\r\n        setStatus(0);\r\n      }\r\n    }\r\n  \r\n    const addTimer = () => {\r\n      if(minutes >= 0 && minutes < 60){\r\n        setMinutes(minutes + 5);\r\n      } else {\r\n        alert('Límite de tiempo de ciclo alcanzado');\r\n      }\r\n  \r\n    }\r\n  \r\n    const subTimer = () => {\r\n      if(minutes > 0){\r\n        setMinutes(minutes - 5);\r\n      } else {\r\n        alert('Mínimo de tiempo alcanzado')\r\n      }\r\n  \r\n    }\r\n    \r\n    const backFromConfig = () => {\r\n      setMsg(studyMsg);\r\n      setStatus(0);\r\n    }\r\n\r\n    \r\n\r\n  return (\r\n        <div className='TimerFunctionality'>\r\n\r\n          <Message msg={msg}/>\r\n          <TimerView minutes={minutes} seconds={seconds} status={status}/>\r\n          <Buttons status={status} stop={stop} reset={reset} resume={resume} start={start} \r\n                  breakTime={breakTime} breakRun={breakRun} goToBreak={goToBreak} backToStudy={backToStudy} \r\n                  configTimer={configTimer} addTimer={addTimer} subTimer={subTimer} backFromConfig={backFromConfig}\r\n                  stopBreak={stopBreak} resumeBreak={resumeBreak}/>\r\n\r\n        </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TimerFunctionality"],"mappings":"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"},"metadata":{},"sourceType":"module"}